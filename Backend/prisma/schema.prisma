datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  role     String
  image    String?
  addBy    Int?
  addedBy  User?    @relation("UserAdded", fields: [addBy], references: [id])
  addedUsers User[] @relation("UserAdded") // The opposite side of the relation

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Food {
  id       Int      @id @default(autoincrement())
  name     String
  details  String?
  price    Float
  image    String?
  isDessert Boolean @default(false)
  isSnack  Boolean @default(false)
  isMainCourse Boolean @default(false)
  addBy    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Drink {
  id       Int      @id @default(autoincrement())
  name     String
  details  String?
  price    Float
  image    String?
  isDessert Boolean @default(false)
  isMainCourse Boolean @default(false)
  addBy    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Table {
  id       Int      @id @default(autoincrement())
  number   Int      @unique
  isEmpty  Boolean   @default(true)
  image    String?
  addBy    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id           Int       @id @default(autoincrement())
  date         DateTime  @default(now())
  customerName String
  menu         Json      // JSON to hold drink and food objects with quantities
  addBy        Int?
  total        Float
  status       String     // 'paid' or 'unpaid'
  tableId      Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
